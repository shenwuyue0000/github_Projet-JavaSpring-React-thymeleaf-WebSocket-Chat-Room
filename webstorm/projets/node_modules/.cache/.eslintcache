[{"E:\\webstorm\\projets\\src\\index.tsx":"1","E:\\webstorm\\projets\\src\\reportWebVitals.ts":"2","E:\\webstorm\\projets\\src\\test.js":"3","E:\\webstorm\\projets\\src\\testt.js":"4","E:\\webstorm\\projets\\src\\App.js":"5"},{"size":554,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1692,"mtime":1654812198533,"results":"9","hashOfConfig":"7"},{"size":1627,"mtime":1654815141220,"results":"10","hashOfConfig":"7"},{"size":2246,"mtime":1654817812075,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"vlablo",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\webstorm\\projets\\src\\index.tsx",[],[],[],"E:\\webstorm\\projets\\src\\reportWebVitals.ts",[],[],"E:\\webstorm\\projets\\src\\test.js",["31","32"],[],"import axios from \"axios\";\r\n\r\nwindow.addEventListener( \"load\", function( event ) {\r\n\r\n    function GetQueryString(name)\r\n    {\r\n        var reg = new RegExp(\"(^|&)\"+ name +\"=([^&]*)(&|$)\");\r\n        var r = window.location.search.substr(1).match(reg);\r\n        if(r!=null)return unescape(r[2]); return null;\r\n    }\r\n    //GetQueryString(\"pseudo\");\r\n\r\n\r\n    //let pseudo = prompt( \"Veuillez saisir votre pseudo :\" );\r\n    let pseudo=GetQueryString(\"pseudo\");\r\n    let roomID=GetQueryString(\"roomID\");\r\n    let userID=GetQueryString(\"userID\");\r\n    //let ws = new WebSocket( \"ws://localhost:8081/testWS/chatserver/\" + pseudo );\r\n    let ws = new WebSocket( \"ws://localhost:8081/testWS/community/\" + roomID+\"-\"+userID );\r\n\r\n    let txtHistory = document.getElementById( \"history\" );\r\n    let txtMessage = document.getElementById( \"txtMessage\" );\r\n    txtMessage.focus();\r\n\r\n\r\n    ws.addEventListener( \"open\", function( evt ) {\r\n        console.log( \"Connection established\" );\r\n    });\r\n\r\n    ws.addEventListener( \"message\", function( evt ) {\r\n        let message = evt.data;\r\n        console.log( \"Receive new message: \" + message );\r\n        txtHistory.value += message + \"\\n\";\r\n    });\r\n\r\n    ws.addEventListener( \"close\", function( evt ) {\r\n        console.log( \"Connection closed\" );\r\n    });\r\n\r\n\r\n    let btnSend = document.getElementById( \"btnSend\" );\r\n    btnSend.addEventListener( \"click\", function( clickEvent ) {\r\n        ws.send( txtMessage.value );\r\n        txtMessage.value = \"\";\r\n        txtMessage.focus();\r\n    });\r\n\r\n    let btnClose = document.getElementById( \"btnClose\" );\r\n    btnClose.addEventListener( \"click\", function( clickEvent ) {\r\n        ws.close();\r\n    });\r\n\r\n});",[],"E:\\webstorm\\projets\\src\\testt.js",["33","34","35"],[],"\r\nimport React from 'react';\r\nimport ReactDOM from \"react-dom/client\";\r\nimport axios from \"axios\";\r\n\r\n/*\r\nclass testt extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`http://localhost:8080/user?userID=`+2)\r\n\r\n            .then(res => { // 请求成功后的处理\r\n                // res是服务器返回的响应数据\r\n                console.log(\"test\");\r\n                console.log(res);\r\n                console.log(res.data);\r\n\r\n                const user = res.data;\r\n                this.setState({ user });\r\n            }).catch(err => { // 请求失败后的处理\r\n            // err是请求失败后的信息\r\n            console.log(\"erreur\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // <div>\r\n            //     111\r\n            // </div>\r\n            <body>\r\n\r\n            <div id=\"example\"></div>\r\n\r\n            <script type=\"text/babel\">\r\n\r\n                ReactDOM.render(\r\n\r\n                <h1>Hello, world!</h1>,\r\n\r\n                document.getElementById('example')\r\n\r\n                );\r\n\r\n                //ReactDOM.createRoot(document.getElementById('root') ).render(<App/>);\r\n\r\n\r\n            </script>\r\n\r\n            </body>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default class;\r\n\r\n */\r\n\r\n//ReactDOM.render(<testt />, document.getElementById('testt'));\r\n\r\n\r\n\r\n/* app.tsx\r\n<div id=\"testt\"></div>\r\n\r\n\r\n  <div id=\"mydiv\"></div>\r\n\r\n  <script type=\"text/babel\">\r\n      ReactDOM.render(\r\n\r\n      <h1>Hello, world!</h1>,\r\n\r\n      document.getElementById('mydiv')\r\n\r\n      );\r\n\r\n  </script>\r\n\r\n */\r\n","E:\\webstorm\\projets\\src\\App.js",["36","37","38"],[],{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":13},{"ruleId":"39","severity":1,"message":"43","line":15,"column":9,"nodeType":"41","messageId":"42","endLine":15,"endColumn":15},{"ruleId":"39","severity":1,"message":"44","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":13},{"ruleId":"39","severity":1,"message":"45","line":3,"column":8,"nodeType":"41","messageId":"42","endLine":3,"endColumn":16},{"ruleId":"39","severity":1,"message":"40","line":4,"column":8,"nodeType":"41","messageId":"42","endLine":4,"endColumn":13},{"ruleId":"39","severity":1,"message":"46","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":12},{"ruleId":"39","severity":1,"message":"45","line":6,"column":8,"nodeType":"41","messageId":"42","endLine":6,"endColumn":16},{"ruleId":"39","severity":1,"message":"47","line":38,"column":13,"nodeType":"41","messageId":"42","endLine":38,"endColumn":19},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'pseudo' is assigned a value but never used.","'React' is defined but never used.","'ReactDOM' is defined but never used.","'logo' is defined but never used.","'roomID' is assigned a value but never used."]